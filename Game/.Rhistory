sd(cdc$age)
plot(x = cdc$weight, y = cdc$wtdesire, pch=19, col="#00AA0080")
view(cdc)
sd(cdc$weight)
names(cdc)
data(heartTr)
library(openintro)
data(heartTr)
prop.table(heartTr, margin = NULL)
prop.table(heartTr, margin = 5)
m <- matrix(1:4, 2)
View(m)
m <- matrix(heartTr, 8)
View(m)
prop.table(m, 1)
prop.table(m, 8)
prop.table(m = TRUE, 8)
prop.table(m, 8)
prop.table(m, 1)
prop.table(heartTr, "survived")
prop.table(heartTr, 8)
prop.table(, 8)
prop.table(m, 8)
prop.table(m)
prop.table(m, 1)
prop.table("treatment":alive, 1)
prop.table("treatment":"alive", 1)
prop.table("treatment":"alive", 1)
prop.table(table(heartTr$1, heartTr$103))
prop.table(table(heartTr$id, heartTr$transplant))
count <- table(heartTr$acceptyear, heartTr$survived)
barplot(count, main="Raw Freq.", xlab="Years", col=c("darkblue", "red"), legend = rownames(count))
count <- table(heartTr$acceptyear, heartTr$transplant, 1)
count <- table(heartTr$acceptyear, heartTr$transplant)
barplot(count, main="Stacked Plot", xlab="Years", col=c("darkblue", "red"), legend = rownames(count))
mosaic(heartTr, shade=TRUE, legend=TRUE)
library(openintro)
mosaic(heartTr, shade=TRUE, legend=TRUE)
mosaicplot.default(heartTr, main = NULL, xlab = heartTr$acceptyear, ylab = heartTr$transplant, sort = NULL, off = NULL, dir = "v", color = FALSE)
mosaicplot(heartTr, main = NULL, xlab = heartTr$acceptyear, ylab = heartTr$transplant, sort = NULL, off = NULL, dir = "v", color = FALSE)
mosaicplot(heartTr, main = NULL, xlab = heartTr$acceptyear, ylab = heartTr$transplant, color = "darkblue")
View(heartTr)
View(arbuthnot)
View(present)
View(m)
View(heartTr)
View(arbuthnot)
data(present)
library(openintro)
data(present)
load("~/Downloads/present.csv")
load("~/present.csv")
attach(present)
View(present)
barplot(table(present$boys))
attach(evals)
attach(evals)
data(evals)
library(openintro)
data(evals)
library(readr)
evals <- read_csv("~/Downloads/evals.csv")
View(evals)
barplot(table(evals$cls_did_eval))
sample(evals$cls_did_eval, size = 10)
sample(evals$cls_did_eval[1:47], size = 2)
sample(evals$cls_did_eval[1:47], size = 2)
sample(evals$cls_did_eval[1:47], size = 2)
sample(evals$cls_did_eval[1:47], size = 2)
sample(evals$cls_did_eval[1:47], size = 2)
pairs <- replicate(50000, sample(evals$cls_did_eval[1:47], size = 2))
df <- data.frame(first = pairs[1,], second = pairs[2,])
View(pairs)
View(df)
table(df$first, df$second)
barplot(table(evals$gender))
mean <- replicate(50000, {samp <- sample(evals$cls_did_eval[1:47], size = 2)
mean(s)})
mean <- replicate(50000, {samp <- sample(evals$cls_did_eval[1:47], size = 2)
mean})
barplot(table(mean))
mean <- replicate(50000, {samp <- sample(evals$cls_did_eval[1:47], size = 2)
mean(s)})
barplot(table(mean))
pairs <- replicate(50000, sample(evals$cls_did_eval[1:47], size = 2, replace = TRUE))
df <- data.frame(first = pairs[1,], second = pairs[2,])
prop.table(table(df$first, df$second), margin = 1)
barplot(table(pairs))
mean(pairs)
sd(pairs)
barplot(table(pairs))
barplot(table(df))
barplot(table(pairs))
attach(nc)
library(readr)
nc_1_ <- read_csv("~/Downloads/nc (1).csv")
View(nc_1_)
sample(nc$visits[1:500], size = 2)
sample(nc_1_$visits[1:500], size = 2)
avg.mean <- replicate(50000, {s <- sample(nc$visits[1:500], size = 2)
mean(s)})
avg.mean <- replicate(50000, {s <- sample(nc_1_$visits[1:500], size = 2)
mean(s)})
barplot(table(avg.mean))
mean(avg.mean)
pair <- replicate(50000, sample(nc_1_$visits[1:500], size = 2, replace = TRUE))
mean(pair)
sd(pair)
mean(pair, na.rm = TRUE)
sd(pair, na.rm = TRUE)
sample(nc_1_$visits[1:500]
2
sample(nc_1_$visits[1:500, size = 2]
sample(nc_1_$visits[1:500, size = 2]
sample(nc_1_$visits[1:500], size = 2)
sample(nc_1_$visits[1:500], size = 2)
sample(nc_1_$visits[1:500], size = 2)
sample(nc_1_$visits[1:500], size = 2)
sample(nc_1_$visits[1:500], size = 2)
sample(nc_1_$visits[1:500], size = 2)
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load("kobe.RData")
View(kobe)
table(df) / nrow(df)
head(kobe)
kobe$basket
kobe.basket.prob <- prop.table(kobe$basket)
kobe.basket.prob <- sample(kobe$basket[1:133]
2
kobe.basket.prob <- sample(kobe$basket[1:133])
table(kobe$basket)
table(kobe$basket = "H")
table(kobe$"H")
table(kobe$'H')
kobe.basket.prob <- sample(c('H','M'), size=133, replace=TRUE)
table(kobe$basket)
table(kobe$basket) / nrow(kobe$basket)
prop.table(table(kobe$basket))
kobe.basket.prob <- prop.table(table(kobe$basket))
prop.table(table(kobe$'H'))
rep(x = "H", times = 133)
outcomes <- c("H")
sample(x = outcomes, size = 1, replace = TRUE)
sample(x = outcomes, size = 2, replace = TRUE)
sample(x = outcomes, size = 10, replace = TRUE)
prop.table(table(kobe$outcomes))
prop.table(table(outcomes))
v <- colnames(data.matrix)
v <- colnames("H")
sample(x = outcomes, size = 133, replace = TRUE)
sample(x = outcomes, size = 58, replace = TRUE)
sample(kobe$basket[1:13])
View(calc_streak)
View(calc_streak)
calc_streak(sample(kobe$basket[1:13]))
barplot(table(calc_streak(sample(kobe$basket))))
c("H")
while(c("H"))
size
outcomes <- c("H", "M")
sample(outcomes, size = 133, replace = TRUE)
sim_outcome <- sample(outcomes, size = 133, replace = TRUE)
table(sim_outcome)
calc_streak(sim_outcome)
barplot(sim_outcome)
barplot(calc_streak((sim_outcome)))
table(calc_streak(sim_outcome))
table(calc_streak(kobe$basket))
replicate(100, sample(calc_streak(sim_outcome, size = 0, replace = TRUE))
1
replicate(100, sample(calc_streak(sim_outcome, size = 2, replace = TRUE))
replicate(100, sample(calc_streak(sim_outcome, size = 2, replace = TRUE))
replicate(100, sample(calc_streak(sim_outcome, replace = TRUE))
1
replicate(100, sample(calc_streak(sim_outcome), size = 0, replace = TRUE))
replicate(100, sample(calc_streak(sim_outcome), size = 2, replace = TRUE))
replicate(100, sample(calc_streak(sim_outcome), size = 0, replace = TRUE))
replicate(100, sample(calc_streak(sim_outcome), size = 1, replace = TRUE))
rep <- replicate(100, sample(calc_streak(sim_outcome), size = 1, replace = TRUE))
table(calc_streak(rep))
replicate(100, sample(calc_streak(sim_outcome), size = 3, replace = TRUE))
table(calc_streak(sim_outcome), size = 3)
rep <- replicate(100, sample(calc_streak(sim_outcome), size = 3, replace = TRUE))
table(calc_streak(rep))
prop.table(table(kobe$basket))
View(kobe)
cards <- c("Ace", "2", "3", "4","5", "6", "7", "8", "9", "10", "Jack", "Queen", "King")
suits <- c("Diamonds", "Clubs", "Hearts", "Spades")
deck <- expand.grid(cards=cards, suits=suits)
View(deck)
prop.table(table(deck))
prop.table(deck)
prop.table(deck$spade)
prop.table(table(ace))
prop.table(table("ace"))
prop.table(table("spade"))
prop.table(table("acd" + spade"))
prop.table(table("acd" + spade"))
prop.table(table("acd" + "spade"))
prop.table(table("ace" + "spade"))
marginal(deck, vars = c("Ace"))
marginal(deck, c("Ace"))
library(openintro)
load("evals.RData")
download.file("http://www.openintro.org/stat/data/evals.RData",
destfile = "evals.RData")
View(evals)
sd(evals$cls_did_eval)
can <- sample(evals$cls_did_eval[1:46], size = 2)
firstsamp <- sample(evals$cls_did_eval[1:46], size = 2)
open(firstsamp)
sample(evals$cls_did_eval[1:46], size = 2)
sample(evals$cls_did_eval[1:46], size = 2)
sample(evals$cls_did_eval[1:46], size = 2)
sample(evals$cls_did_eval[1:46], size = 2)
sample(evals$cls_did_eval[1:46], size = 2)
samplesize <- sample(evals$cls_did_eval[1:46], size = 2)
replicate(463, mean(sample(evals$cls_did_eval, 123)))
replicate(123), mean(sample(evals$cls_did_eval, 123)))
replicate(123, mean(sample(evals$cls_did_eval, 123)))
rep <- replicate(123, mean(sample(evals$cls_did_eval, 123)))
45.01848 / sqrt(123)
stderr <- 45.01848 / sqrt(123)
sample(samplesize)
meanstderr <- mean(evals$cls_did_eval)
mean(evals$cls_did_eval)
meanstderr <- 36.62419 / sqrt(123)
36.62419 / sqrt(123)
install.packages("ggplot2")
library(ggplot2)
source("http://www.openintro.org/stat/data/cdc.R")
source("http://www.openintro.org/stat/data/cdc.R")
View(cdc)
plot(x = cdc$weight, y = cdc$wtdesire, pch=19)
plot(x = cdc$weight, y = cdc$wtdesire, pch=10)
plot(x = cdc$weight, y = cdc$wtdesire, pch=5)
plot(x = cdc$weight, y = cdc$wtdesire, pch=20
source("http://www.openintro.org/stat/data/cdc.R")
View(cdc)
weight[abs(weight - mean(weight)) < sd(weight)]
cdc$weight[abs(cdc$weight - mean(cdc$weight)) < sd(cdc$weight)]
cdc$weight[abs(cdc$weight - mean(cdc$weight)) < 1]
cdc$weight[abs(scale(cdc$weight)) < 1]
1.below.mean <- cdc$weight[abs(scale(cdc$weight)) < 1]
1belowmean <- cdc$weight[abs(scale(cdc$weight)) < 1]
cdc$1.below.mean <- cdc$weight[abs(scale(cdc$weight)) < 1]
cdc$1belowmean <- cdc$weight[abs(scale(cdc$weight)) < 1]
cdc$belowmean <- cdc$weight[abs(scale(cdc$weight)) < 1]
cdc$weight[abs(scale(cdc$weight)) < 1]
cdc$weight[abs(cdc$weight - mean(cdc$weight)) < 1]
cdc\$boys > cdc\$girls
cdc$boys > cdc$girls
cdc$boys >< cdc$girls
cdc$boys < cdc$girls
cdc$weight / cdc$wtdesire
cdc$weight[abs(cdc$weight - mean(cdc$weight)) < 1]
cdc$weight[abs(cdc$weight - mean(cdc$weight)) < 2]
install.package('ggplot2',dep=TRUE)
install('ggplot2',dep=TRUE)
install.packages("ggplot2")
install.package('ggplot2',dep=TRUE)
library(ggplot2)
install.package('ggplot2',dep=TRUE)
library(ggplot)
library('ggplot2')
library(ggplot2)
install.package('ggplot',dep=TRUE)
install.package('ggplot2',dep=TRUE)
install.packages("ggplot2")
install.packages("ggplot2", dep=TRUE)
install.packages("ggplot2", dep = TRUE)
library(ggplot2)
mpg
str(mpg)
summary(mpg)
mpg[1:5,]
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram()
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram(binwidth=2)
View(pair)
e <- e + labs(fill = "MPG (Highway)") + facet_grid(.~year)
e <- e + labs(fill = "MPG (Highway)") + facet_grid(.~year)
# This is a document to get you playing around with ggplot2 - a data visualization package in R
# To install ggplot2, you can try the first command below. If that doesn't work, please try to
# find someone who can help you. UITS in Engineering 318 is a really good resource for this.
# Finally, here is some great documentation for ggplot2: http://docs.ggplot2.org/0.9.2.1/index.html
install.package('ggplot2',dep=TRUE)
# To use a package, you must load it when you open R
# The command to load a package is library(PACKAGENAME)
# You can only load a package after you have installed it
library(ggplot2)
mpg
str(mpg)
summary(mpg)
mpg[1:5,]
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram()
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram(binwidth=2)
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram(binwidth=2,color="red")
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram(binwidth=2, fill="red")
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram(binwidth=2,fill="red",color="black")
a <- a + theme_classic()
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_histogram(binwidth=2,fill="red",color="black")
a <- a + theme_classic()
a <- a + labs(y = "Frequency\n") + labs(x = "\nMPG (Highway)")
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_freqpoly(fill="red",color="black")
a <- a + theme_classic()
a <- a + labs(y = "Frequency\n") + labs(x = "\nMPG (Highway)")
a <- ggplot(mpg,aes(x=hwy))
a <- a + geom_area(stat="bin",fill="red",color="black")
a <- a + theme_classic()
a <- a + labs(y = "Frequency\n") + labs(x = "\nMPG (Highway)")
#
b <- ggplot(mpg,aes(x=cty,y=hwy))
b <- b + geom_point()
b <- ggplot(mpg,aes(x=cty,y=hwy))
b <- b + geom_point() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
b <- ggplot(mpg,aes(x=cty,y=hwy,color=year))
b <- b + geom_point() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
mpg[mpg$hwy > 40,]
mpg[mpg$hwy > 40 & mpg$year == 2008,]
mpg[mpg$hwy > 40 & mpg$year == 1999,]
mpg$year
b <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
b <- b + geom_point() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
b <- b + geom_smooth()
b <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
b <- b + geom_point() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
b <- b + geom_smooth(method=lm)
b <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
b <- b + geom_point() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
b <- b + geom_smooth(method=lm,se=FALSE)
b <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
b <- b + geom_point() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
b <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
b <- b + geom_jitter() + theme_classic()
b <- b + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
#
c <- ggplot(mpg,aes(x=class,y=hwy))
c <- c + geom_boxplot() + theme_classic()
c <- ggplot(mpg,aes(x=class,y=hwy,color=factor(year)))
c <- c + geom_boxplot() + theme_classic()
c <- ggplot(mpg,aes(x=class,y=hwy,color=factor(year)))
c <- c + geom_boxplot() + theme_classic()
c <- c + labs(y = "MPG (Highway)\n") + labs(x = "")
#
d <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
d <- d + geom_point() + theme_classic()
d <- d + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
d <- d + facet_grid(.~class)
d <- ggplot(mpg,aes(x=cty,y=hwy,color=factor(year)))
d <- d + geom_point() + theme_classic()
d <- d + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
d <- d + facet_grid(.~class) + geom_smooth(method=lm,se=FALSE)
d <- ggplot(mpg,aes(x=cty,y=hwy))
d <- d + geom_point() + theme_classic()
d <- d + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
d <- d + facet_grid(year~class) + geom_smooth(method=lm,se=FALSE)
d <- ggplot(mpg,aes(x=cty,y=hwy,color=cyl))
d <- d + geom_point() + theme_classic()
d <- d + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
d <- d + facet_grid(year~class)
#
e <- ggplot(mpg,aes(x=cty,y=hwy,fill=cyl))
e <- e + geom_tile() + theme_classic()
e <- e + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
e <- ggplot(mpg,aes(x=cty,y=hwy,fill=cyl))
e <- e + geom_tile() + theme_classic()
e <- e + labs(y = "MPG (Highway)\n") + labs(x = "\nMPG (City)")
e <- e + facet_grid(.~year)
e <- ggplot(mpg,aes(x=class,y=factor(cyl),fill=hwy))
e <- e + geom_tile() + theme_classic()
e <- e + labs(y = "Number of Cylinders") + labs(x = "")
e <- e + labs(fill = "MPG (Highway)") + facet_grid(.~year)
outlier(heartTr$survtime)
boxPlot(heartTr$survtime)
View(heartTr)
marioKart
data(marioKart)
download.file("http://www.openintro.org/stat/data/marioKart.RData", destfile = "marioKart.RData")
load("marioKart.RData")
library(marioKart)
load(gpa)
install.package('gpa',dep=TRUE)
install.package('marioKart',dep=TRUE)
library(gpa)
install.packages("elementR")
library("colorspace", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("crayon", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
load(colorspace)
colorspace
library("openintro", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
load(marioKart)
gpa
area <- replicate(500, {
m <- sample(gpa$studyweek, 15)
mean(m)
})
area
study <- replicate(500, {
m <- sample(gpa$studyweek, 15)
mean(m)
})
study
mean(study)
mean(gpa$studyweek)
sd(study)
sd(gpa$studyweek)
study <- replicate(500, {
m <- sample(gpa$studyweek, 30)
mean(m)
})
study
mean(study)
sd(study)
library("openintro", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
burger
load(dream)
dream
data(dream)
data(marioKart)
View(marioKart)
View(marioKart)
View(marioKart)
mean(marioKart$totalPr)
sd(marioKart$totalPr)
sdkart <- sd(marioKart$totalPr)
sd(marioKart$totalPr)
se <- sd(marioKart$totalPr)/sqrt(length(marioKart$totalPr))
error <- qnorm(0.95)*se
error
sd(marioKart$totalPr)
se <- sd(marioKart$totalPr)/sqrt(length(marioKart$totalPr))
error <- qnorm(0.95)*se
error
SE
SE <- SD/sqrt(n)
n <- 26
SD <- 3.58
SE <- SD/sqrt(n)
SE
n <- 26
SD <- 4.51
SE <- SD/sqrt(n)
SE
0.8844838 - 0.7020958
data(marioKart)
library("openintro", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
data(marioKart)
View(marioKart)
t.test(marioKart$totalPr, marioKart$startPr, paired = TRUE)
t.test(marioKart$totalPr, marioKart$startPr, paired = FALSE)
library("openintro", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
data("ipod")
View(ipod)
View(trees)
summary(line)
summary(line)
treelm <- lm(girth ~ volume, data = trees)
treelm <- lm(girth ~ volume, trees)
line <- lm(Girth ~ Volume, data = trees)
summary(treelm)
treelm <- lm(Girth ~ Volume, data = trees)
summary(treelm)
plot(treelm)
abline(treelm)
plot(abline(treelm))
plot(Girth ~ Volume, trees)
abline(treelm, col="red")
lm(formula = survived ~ age, family = "binomial", data = titan)
view(Titanic)
lm(formula = survived ~ age, family = "binomial", Titanic)
data(Titanic)
lm(formula = survived ~ age, family = "binomial", Titanic)
View(Titanic)
load("~/kobe.RData")
load("~/.RData")
library(readr)
Traffic_Crashes_Vehicles <- read_csv("~/Downloads/Traffic_Crashes_-_Vehicles.csv")
View(Traffic_Crashes_Vehicles)
library(readr)
Traffic_Crashes_Vehicles_1_ <- read_csv("~/Downloads/Traffic_Crashes_-_Vehicles (1).csv")
View(Traffic_Crashes_Vehicles_1_)
Traffic_Crashes_Vehicles_1_[, 3]
keeps <- c("RD_NO", "CRASH_DATE")
Traffic_Crashes_Vehicles_1_[keeps]
view(keeps)
View(Traffic_Crashes_Vehicles_1_[keeps])
save(Traffic_Crashes_Vehicles_1_[keeps], file = "Traffic_Crashes_Vehicles_1_[keeps].RData"
save.image("~/Traffic.RData")
save(Traffic_Crashes_Vehicles_1_[keeps]
Traffic_Crashes_Vehicles_1_
save(Traffic_Crashes_Vehicles_1_[keeps], file = "Traffic_Crashes_Vehicles_1_[keeps].RData"
save(Traffic_Crashes_Vehicles_1_[keeps]
Traffic_Data <- Traffic_Crashes_Vehicles_1_[keeps]
View(Traffic_Data)
save(Traffic_Data, file = "Traffic_Data.RData")
load("/Users/Gavand/Traffic_Data.RData")
write.csv(Traffic_Data,"Gavand\\Traffic_Data.csv", row.names = FALSE)
